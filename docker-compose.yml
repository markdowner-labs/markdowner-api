networks:
  markdowner-network:
    name: markdowner-network
    driver: bridge
    ipam:
      config:
        - subnet: ${SUBNET_CONFIG}

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    networks:
      markdowner-network:
        ipv4_address: ${POSTGRES_IPV4}
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    networks:
      markdowner-network:
        ipv4_address: ${PGADMIN_IPV4}
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis
    networks:
      markdowner-network:
        ipv4_address: ${REDIS_IPV4}
    ports:
      - "${REDIS_PORT}:6379"
    command: >
      redis-server
      --requirepass "${REDIS_PASSWORD}"
      --maxmemory ${REDIS_MAX_MEMORY}
      --maxmemory-policy allkeys-lru
      --save ""
      --appendonly no
    restart: unless-stopped

  springboot:
    image: openjdk:21-jdk
    container_name: springboot
    networks:
      markdowner-network:
        ipv4_address: ${SPRINGBOOT_IPV4}
    ports:
      - ${SPRINGBOOT_PORT}:8080
    environment:
      DATASOURCE_USERNAME: ${DATASOURCE_USERNAME}
      DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
      DATASOURCE_URL: ${DATASOURCE_URL}
      DDL_AUTO: ${DDL_AUTO}
    volumes:
      - ./:/app
    working_dir: /app
    stdin_open: true
    tty: true
    restart: unless-stopped
